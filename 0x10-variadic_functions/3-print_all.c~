#include <stdio.h>
#include <stdarg.h>

/**
 * print_all - Prints a list of arguments based on a format string.
 * @format: A string containing format specifiers for the arguments.
 *          'c' for char, 'i' for integer, 'f' for float, 's' for string.
 *          Any other character is ignored.
 * @...: The arguments to be printed.
 *
 * Description: This function iterates through the format string and prints
 * the corresponding argument for each format specifier. If the string
 * argument is NULL, it prints "(nil)". A new line is printed at the end.
 */
void print_all(const char * const format, ...)
{
va_list args;
va_start(args, format);
int i = 0;
char *sep = "";
char *str;
while (format && format[i])
{
int printed = 0;
switch (format[i])
{
case 'c':
{
char c = va_arg(args, int);
printf("%s%c", sep, c);
printed = 1;
break;
}
case 'i':
{
int d = va_arg(args, int);
printf("%s%d", sep, d);
printed = 1;
break;
}
case 'f':
{
float f = (float)va_arg(args, double);
printf("%s%f", sep, f);
printed = 1;
break;
}
case 's':
{
str = va_arg(args, char *);
if (str == NULL)
{
str = "(nil)";
}
printf("%s%s", sep, str);
printed = 1;
break;
}
}
if (printed)
{
sep = ", ";
}
i++;
if (format[i] && (format[i] == 'c' || format[i] == 'i' || format[i] == 'f' || format[i] == 's'))
{
printf("%s", sep);
}
}
printf("\n");
va_end(args);
}
